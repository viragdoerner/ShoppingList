{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/product-list/product-list.component.ts","webpack:///src/app/product-list/product-list.component.html","webpack:///src/app/top-bar/top-bar.component.ts","webpack:///src/app/top-bar/top-bar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","path","component","declarations","providers","bootstrap","ProductListComponent","http","products","productsUrl","window","alert","url","get","subscribe","res","err","getAllItems","TopBarComponent","environment","production","bootstrapModule","catch","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'shoppinglist-app';\n}\n","<app-top-bar></app-top-bar>\r\n\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {RouterModule} from \"@angular/router\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TopBarComponent} from \"./top-bar/top-bar.component\";\nimport {ProductListComponent} from \"./product-list/product-list.component\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {HttpClientModule} from \"@angular/common/http\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopBarComponent,\n    ProductListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: '', component: ProductListComponent },\n    ])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport { products } from '../products';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {Item} from \"./model/item\";\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit{\n  products: Item[] = [];\n  constructor(\n    private http: HttpClient) { }\n  // products = products;\n  private productsUrl = 'api/items';  // URL to web api\n\n  check() {\n    window.alert('The items status has changed!');\n    }\n    public getAllItems(){\n      let url = \"http://localhost:8080/items\";\n      this.http.get<Item[]>(url).subscribe(\n         res => {\n          this.products = res;\n        },\n         err => {\n          alert(\"an error has occured\")\n        }\n     );\n    }\n\n  ngOnInit(): void {\n    this.getAllItems();\n  }\n\n  /** GET items from the server\n  getAllItems (): Observable<Item[]> {\n    return this.http.get<Hero[]>(this.heroesUrl)\n  }\n  */\n\n}\n\n","\n\n<table mdbTable class=\"table\">\n  <tbody>\n  <tr mdbTableCol *ngFor=\"let product of products\">\n    <td scope=\"col\"> <h3>{{product.name}}</h3></td>\n    <td scope=\"col\">{{product.amount}}</td>\n    <td scope=\"col\">\n\n      <div class=\"form-check\">\n        <input type=\"checkbox\" class=\"form-check-input\" [checked]=\"product.done\"  (change)=\"check()\" id=\"exampleCheck1\">\n        <label class=\"form-check-label\" for=\"exampleCheck1\"></label>\n      </div>\n\n    </td>\n  </tr>\n  </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.css']\n})\nexport class TopBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(){\n  }\n\n}\n","<a [routerLink]=\"['/']\">\n  <h1>Shopping list</h1>\n</a>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}